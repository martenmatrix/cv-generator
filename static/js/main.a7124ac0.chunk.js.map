{"version":3,"sources":["Components/cv-gen/input.js","Components/cv-gen/output.js","Components/cv-gen/index.js","Components/navbar.js","App.js","index.js"],"names":["GeneralInput","props","handleChange","bind","event","name","target","value","this","setGeneral","currentState","firstName","lastName","email","phone","street","number","city","state","zip","country","className","type","onChange","placeholder","Component","EducationInput","setEducationValue","data","id","school","education","dateStart","dateEnd","removeEducation","onClick","ExperienceInput","setExperienceValue","company","position","description","removeExperience","CVGeneratorInput","addEducation","addExperience","map","index","experience","Header","Address","GeneralOutput","Education","Experience","CVGeneratorOutput","educationArray","experienceArray","CVGenerator","lastIndex","inArray","newEntry","setState","prevState","newIndex","newArray","concat","filter","entry","addEntry","removeEntry","setValue","NavBar","App","information","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7124ac0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass GeneralInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.props.setGeneral(name, value);\n    }\n\n    render() {\n    const currentState = this.props.currentState;\n\n    const { firstName,\n            lastName,\n            email,\n            phone,\n            street,\n            number,\n            city,\n            state,\n            zip,\n            country } = currentState;\n    \n\n    return (\n        <div className=\"general\">\n            <div className=\"general-input\">\n                <input type=\"text\" onChange={this.handleChange} value={firstName} name=\"firstName\" placeholder=\"First Name\" />\n                <input type=\"text\" onChange={this.handleChange} value={lastName} name=\"lastName\" placeholder=\"Last Name\" />\n                <input type=\"text\" onChange={this.handleChange} value={email} name=\"email\" placeholder=\"Email\" />\n                <input type=\"text\" onChange={this.handleChange} value={phone} name=\"phone\" placeholder=\"Phone\" />\n                <div className=\"address\">\n                    <input type=\"text\" onChange={this.handleChange} value={street} name=\"street\" placeholder=\"Street\" />\n                    <input type=\"text\" onChange={this.handleChange} value={number} name=\"number\" placeholder=\"Number\" />\n                    <input type=\"text\" onChange={this.handleChange} value={city} name=\"city\" placeholder=\"City\" />\n                    <input type=\"text\" onChange={this.handleChange} value={state} name=\"state\" placeholder=\"State\" />\n                    <input type=\"text\" onChange={this.handleChange} value={zip} name=\"zip\" placeholder=\"Zip\" />\n                    <input type=\"text\" onChange={this.handleChange} value={country} name=\"country\" placeholder=\"Country\" />\n                </div>\n            </div>\n        </div>\n      );\n    }\n  }\n  \nclass EducationInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.props.setEducationValue(this.props.data.id, name, value);\n    }\n\n    render() {\n    const {\n        id,\n        school,\n        education,\n        dateStart,\n        dateEnd } = this.props.data;\n    \n    const removeEducation = this.props.removeEducation;\n\n      return (\n        <div className=\"education\">\n            <div className=\"education-input\">\n                <input type=\"text\" value={school} onChange={this.handleChange} name=\"school\" placeholder=\"School\" />\n                <input type=\"text\" value={education} onChange={this.handleChange} name=\"education\" placeholder=\"Education\" />\n                <div className=\"date\">\n                    <input type=\"text\" value={dateStart} onChange={this.handleChange} name=\"dateStart\" placeholder=\"Start\" />\n                    <input type=\"text\" value={dateEnd} onChange={this.handleChange} name=\"dateEnd\" placeholder=\"End\" />\n                </div>\n            </div>\n            <button onClick={() => removeEducation(id)}>Delete</button>\n        </div>\n      );\n    }\n}\n  \nclass ExperienceInput extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.props.setExperienceValue(this.props.data.id, name, value);\n    }\n\n    render() {\n      const { id,\n            company,\n            position,\n            dateStart,\n            dateEnd,\n            description\n            } = this.props.data;\n      \n      const removeExperience = this.props.removeExperience;\n\n      return (\n        <div className=\"experience\">\n            <div className=\"experience-input\">\n                <input type=\"text\" onChange={this.handleChange} value={company} name=\"company\" placeholder=\"Company\" />\n                <input type=\"text\" onChange={this.handleChange} value={position} name=\"position\" placeholder=\"Position\" />\n                <div className=\"date\">\n                    <input type=\"text\" onChange={this.handleChange} value={dateStart} name=\"dateStart\" placeholder=\"Start\" />\n                    <input type=\"text\" onChange={this.handleChange} value={dateEnd} name=\"dateEnd\" placeholder=\"End\" />\n                </div>\n                <textarea name=\"description\" onChange={this.handleChange} value={description} placeholder=\"Description\" />\n            </div>\n            <button onClick={() => removeExperience(id)}>Delete</button>\n        </div>\n      );\n    }\n}\n  \nclass CVGeneratorInput extends Component {   \n    render() {\n      const { currentState,\n              setGeneral,\n              setEducationValue,\n              addEducation,\n              removeEducation,\n\n              addExperience,\n              removeExperience,\n              setExperienceValue,\n             } = this.props;\n\n      return (\n        <div className=\"cv-generator-input\">\n            <h2>General Info</h2>\n            <GeneralInput currentState={currentState}\n                          setGeneral={setGeneral}/>\n\n            <h2>Education</h2>\n            {currentState.education.map((education, index) => <EducationInput key={index}\n                                                                              data={education}\n                                                                              removeEducation={removeEducation}\n                                                                              setEducationValue={setEducationValue}/>)}\n            \n            <button onClick={addEducation}>Add</button>\n\n            <h2>Experience</h2>\n            {currentState.experience.map((experience, index) => <ExperienceInput key={index}\n                                                                                 data={experience}\n                                                                                 removeExperience={removeExperience}\n                                                                                 setExperienceValue={setExperienceValue}/>)}\n            <button onClick={addExperience}>Add</button>\n        </div>\n      );\n    }\n}\n\nexport default CVGeneratorInput;","import React, { Component } from 'react';\nimport '../styles/cv-gen.css';\n\nfunction Header(props) {\n    return (\n        <div className=\"header\">\n          <div className=\"name\">{props.name}</div>\n          <div className=\"contact\">\n            <div className=\"email\">{props.email}</div>\n            <div className=\"phone\">{props.phone}</div>\n          </div>\n        </div>\n    );\n}\n\nfunction Address(props) {\n    return (\n        <div className=\"address\">\n          <div className=\"streetNumber\">{`${props.street} ${props.number}`}</div>\n          <div className=\"zipCountry\">{`${props.zip} ${props.city}`}</div>\n          <div className=\"state\">{props.state}</div>\n          <div className=\"country\">{props.country}</div>\n        </div>\n    );\n}\n\nclass GeneralOutput extends Component {\n    render() {\n      const { firstName,\n              lastName,\n              email,\n              phone,\n              \n              street,\n              number,\n              city,\n              state,\n              zip,\n              country } = this.props.data;\n\n      return (\n        <div className=\"general\">\n            <Header name={`${firstName} ${lastName}`}\n                    email={email}\n                    phone={phone}/>\n\n            <Address street={street}\n                     number={number}\n                     city={city}\n                     state={state}\n                     zip={zip}\n                     country={country}/>\n        </div>\n      );\n    }\n}\n\nfunction Education(props) {\n    const {\n        school,\n        education,\n        dateStart,\n        dateEnd, } = props.education;\n\n    return (\n        <div className=\"education-section\">\n          <div className=\"education\">{education}</div>\n          <div className=\"school\">{school}</div>\n          <div className=\"date\">{dateStart\n                                + ((dateStart&&dateEnd) ? '-' : '')\n                                + dateEnd}</div>\n        </div>\n    );\n}\n\n\nfunction Experience(props) {\n\n  const { company,\n          position,\n          dateStart,\n          dateEnd,\n          description } = props.experience;\n\n  return (\n    <div className=\"experience-section\">\n      <div className=\"company\">{company}</div>\n      <div className=\"position\">{position}</div>\n      <div className=\"date\">{dateStart\n                            + ((dateStart&&dateEnd) ? '-' : '')\n                            + dateEnd}</div>\n      <div className=\"description\">{description}</div>\n    </div>\n  );\n}\n\n  \nclass CVGeneratorOutput extends Component {\n    render() {\n      const data = this.props.data;\n      const educationArray = data.education;\n      const experienceArray = data.experience;\n\n      return (\n        <div className=\"cv-generator-output\">\n            <div className=\"cv-output\">\n              <div className=\"general-output\">\n                <h2>General</h2>\n                <GeneralOutput data={data}/>\n              </div>\n\n              <div className=\"education-output\">\n                <h2>Education</h2>\n                <div className=\"education\">\n                {educationArray.map((education, index) => (\n                                <Education key={index} education={education}/>\n                                ))}\n                </div>\n              </div>\n\n              <div className=\"experience-output\">\n                <h2>Experience</h2>\n                {experienceArray.map((experience, index) => (\n                                <Experience key={index} experience={experience}/>\n                                ))}\n              </div>\n            </div>\n        </div>\n      );\n    }\n}\n\nexport default CVGeneratorOutput;","import React, { Component } from 'react';\nimport CVGeneratorInput from './input';\nimport CVGeneratorOutput from './output';\n\nexport default class CVGenerator extends Component {\n    constructor() {\n        super();\n        // you should not use nested state in react because it re-renders everything when updating\n        this.state = {\n                firstName: '',\n                lastName: '',\n                email: '',\n                phone: '',\n                street: '',\n                number: '',\n                city: '',\n                state: '',\n                zip: '',\n                country: '',\n\n                lastIndex: 0,\n                education: [],\n                experience: [],\n            }\n\n        this.setGeneral = this.setGeneral.bind(this);\n\n        this.addEducation = this.addEducation.bind(this);\n        this.setEducationValue = this.setEducationValue.bind(this);\n        this.removeEducation = this.removeEducation.bind(this);\n\n        this.addExperience = this.addExperience.bind(this);\n        this.setExperienceValue = this.setExperienceValue.bind(this);\n        this.removeExperience = this.removeExperience.bind(this);\n    }\n\n    addEntry(inArray, newEntry) {\n        this.setState(function(prevState) {\n            const newIndex = prevState.lastIndex + 1;\n            newEntry.id = newIndex;\n\n            const newArray = prevState[inArray].concat(newEntry);\n            \n            // should i return only the new state or the whole prevState?\n            return { [inArray]: newArray,\n                    lastIndex: newIndex };\n        });\n    }\n\n    removeEntry(inArray, id) {\n        this.setState(function(prevState) {\n            const newArray = prevState[inArray].filter((entry) => {\n                return entry.id !== id;\n            });\n\n            return {\n                [inArray]: newArray,\n            };\n        });\n    }\n\n    setValue(inArray, id, name, value) {\n        this.setState(function(prevState) {\n            const newArray = prevState[inArray].map((entry) => {\n                if (entry.id === id) {\n                    return {\n                        ...entry,\n                        [name]: value,\n                    };\n                }\n                return entry;\n            });\n\n            return {\n                [inArray]: newArray,\n            };\n        });\n    }\n\n    setGeneral(name, value) {\n        this.setState({[name]: value});\n    }\n\n    addEducation() {\n        const educationTemplate = { school: '',\n                                    education: '',\n                                    dateStart: '',\n                                    dateEnd: '',\n                                  };\n\n        this.addEntry('education', educationTemplate);\n    }\n\n    removeEducation(id) {\n        this.removeEntry('education', id);\n    }\n\n    setEducationValue(id, name, value) {\n        this.setValue('education', id, name, value);\n    }\n\n    addExperience() {\n        const experienceTemplate = { company: '',\n                                    position: '',\n                                    dateStart: '',\n                                    dateEnd: '',\n                                    description: '',\n                                    };\n\n        this.addEntry('experience', experienceTemplate)\n    }\n\n    removeExperience(id) {\n        this.removeEntry('experience', id);\n    }\n\n    setExperienceValue(id, name, value) {\n        this.setValue('experience', id, name, value);\n    }\n\n    render() {\n        return (\n            <div className=\"cv-generator\">\n                <CVGeneratorInput currentState={this.state}\n                                  setGeneral={this.setGeneral}\n\n                                  addEducation={this.addEducation}\n                                  setEducationValue={this.setEducationValue}\n                                  removeEducation={this.removeEducation}\n\n                                  addExperience={this.addExperience}\n                                  setExperienceValue={this.setExperienceValue}\n                                  removeExperience={this.removeExperience}\n                                  />\n                <CVGeneratorOutput data={this.state}/>\n            </div>\n        );\n    }\n}","import './styles/navbar.css';\n\nexport default function NavBar() {\n    return (\n      <div className=\"navbar\">\n        <h1 className=\"title\">CV Generator</h1>\n      </div>\n    )\n  }","import React, { Component } from 'react';\nimport CVGenerator from './Components/cv-gen';\nimport NavBar from './Components/navbar';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      information: {\n        name: '',\n        email: 'peter',\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <NavBar />\n        <CVGenerator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}